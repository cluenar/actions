name: Update lock file

on:
  schedule:
    - cron: '0 14 * * 0'
  workflow_dispatch:
  workflow_call:
    inputs:
      manager:
        type: string
        description: Package manager (npm or yarn)
        default: npm
      node-version:
        type: string
        description: 'Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0'
      node-version-file:
        type: string
        description: 'File containing the version Spec of the version to use. Default: .nvmrc'
        default: .nvmrc
    secrets:
      token:
        description: GitHub access token
      app-id:
        description: GitHub app ID
      private-key:
        description: GitHub app private key

jobs:
  update-lock-file:
    name: Update lock file
    runs-on: ubuntu-latest
    env:
      INPUT_MANAGER: ${{ inputs.manager || 'npm' }}
      INPUT_NODE_VERSION: ${{ inputs.node-version }}
      INPUT_NODE_VERSION_FILE: ${{ inputs.node-version-file || '.nvmrc' }}
      SECRET_TOKEN: ${{ secrets.token }}
      SECRET_APP_ID: ${{ secrets.app-id || secrets.CLUENAR_PUBLIC_BOT_APP_ID }}
      SECRET_PRIVATE_KEY: ${{ secrets.private-key || secrets.CLUENAR_PUBLIC_BOT_PRIVATE_KEY }}

    steps:
      - name: Check required secrets
        if: env.SECRET_TOKEN == null && (env.SECRET_APP_ID == null || env.SECRET_PRIVATE_KEY == null)
        run: exit 1
        shell: bash

      - name: Get bot token (main)
        id: get-bot-token-main
        if: github.event_name != 'workflow_call' && env.SECRET_TOKEN == null
        uses: cluenar/actions/get-github-app-token@main
        with:
          app-id: ${{ env.SECRET_APP_ID }}
          private-key: ${{ env.SECRET_PRIVATE_KEY }}

      - name: Get bot token (version)
        id: get-bot-token-version
        if: github.event_name == 'workflow_call' && env.SECRET_TOKEN == null
        uses: cluenar/actions/get-github-app-token@v1.0.2
        with:
          app-id: ${{ env.SECRET_APP_ID }}
          private-key: ${{ env.SECRET_PRIVATE_KEY }}

      - name: Set bot token
        run: echo "BOT_TOKEN=${{ steps.get-bot-token-main.outputs.token || steps.get-bot-token-version.outputs.token }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          cache: ${{ env.INPUT_MANAGER }}
          node-version: ${{ env.INPUT_NODE_VERSION }}
          node-version-file: ${{ env.INPUT_NODE_VERSION_FILE }}

      - name: Update the NPM lock file
        if: env.INPUT_MANAGER == 'npm'
        run: rm package-lock.json && npm i

      - name: Update the Yarn lock file
        if: env.INPUT_MANAGER == 'yarn'
        run: rm yarn.lock && yarn

      - name: Create a pull request with the updated file
        uses: branoholy/update-files-action@main
        with:
          token: ${{ env.SECRET_TOKEN || env.BOT_TOKEN }}
          branch.name: deps-update-lock-file
          branch.recreate: true
          commit.paths: package-lock.json
          commit.message: 'deps(lock): Update lock file'
          commit.token: ${{ env.BOT_TOKEN || secrets.GITHUB_TOKEN }}
          pull-request.body: Automatic update of dependencies in `package-lock.json`.
          pull-request.labels: |
            type: deps
            scope: lock
