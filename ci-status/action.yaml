name: CI status
description: Report the CI result

inputs:
  token:
    description: Token for sending the status
    required: true

env:
  CI_STATE: pending
  CI_DESCRIPTION: Waiting

runs:
  using: composite
  steps:
    - name: Set initial state
      if: github.event.action == 'requested'
      run: |
        echo "CI_STATE=pending" >> $GITHUB_ENV &&
        echo "CI_DESCRIPTION=In progress" >> $GITHUB_ENV
      shell: bash
    - name: Set success state
      if: github.event.action == 'completed' && github.event.workflow_run.conclusion == 'success'
      run: |
        echo "CI_STATE=success" >> $GITHUB_ENV &&
        echo "CI_DESCRIPTION=Passed" >> $GITHUB_ENV
      shell: bash
    - name: Set failure state
      if: github.event.action == 'completed' && github.event.workflow_run.conclusion == 'failure'
      run: |
        echo "CI_STATE=failure" >> $GITHUB_ENV &&
        echo "CI_DESCRIPTION=Failed" >> $GITHUB_ENV
      shell: bash
    - name: Send status
      uses: octokit/request-action@v2.1.0
      with:
        route: POST /repos/{owner}/{repo}/statuses/{sha}
        owner: ${{ github.event.repository.owner.login }}
        repo: ${{ github.event.repository.name }}
        sha: ${{ github.event.workflow_run.head_sha }}
        context: Status / CI
        state: ${{ env.CI_STATE }}
        description: ${{ env.CI_DESCRIPTION }}
        GITHUB_TOKEN: ${{ inputs.token }}
